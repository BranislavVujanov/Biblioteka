/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package mylibraryapp.ui.form.user.profile;

import java.awt.Component;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableRowSorter;
import mylibraryapp.domain.UserProfile;
import mylibraryapp.exception.UserMessageException;
import mylibraryapp.service.UserProfileService;
import mylibraryapp.service.impl.UserProfileServiceImpl;
import mylibraryapp.ui.component.table.model.UserProfileTableModel;

/**
 *
 * @author Branislav Vujanov
 */
public class UserProfileSearchForm extends javax.swing.JDialog {

    private UserProfileService userProfileService;

    /**
     * Creates new form UserProfileSearchForm
     */
    public UserProfileSearchForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        userProfileService = new UserProfileServiceImpl();
        prepareView();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblUserProfile = new javax.swing.JTable();
        pnlFilter = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtFilter = new javax.swing.JTextField();
        btnChange = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pregled korisnika sistema");

        tblUserProfile.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblUserProfile);

        jLabel4.setText("Pretraga po kljucnoj reci:");

        txtFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFilterKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlFilterLayout = new javax.swing.GroupLayout(pnlFilter);
        pnlFilter.setLayout(pnlFilterLayout);
        pnlFilterLayout.setHorizontalGroup(
            pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(221, Short.MAX_VALUE))
        );
        pnlFilterLayout.setVerticalGroup(
            pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFilterLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btnChange.setText("Izmeni podatke");
        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });

        btnDelete.setText("Izbrisi korisnika");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 754, Short.MAX_VALUE)
                    .addComponent(pnlFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnChange)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChange)
                    .addComponent(btnDelete))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed

        try {
            int index = tblUserProfile.convertRowIndexToModel​(tblUserProfile.getSelectedRow());

            UserProfileTableModel model = (UserProfileTableModel) tblUserProfile.getModel();
            UserProfile selectedUserProfile = model.getUserProfile(index);
            new UserProfileUpdateForm(null, true, selectedUserProfile).setVisible(true);

            prepareView();
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "Niste odabrali korisnika");
        }

    }//GEN-LAST:event_btnChangeActionPerformed

    private void txtFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFilterKeyReleased
        String query = txtFilter.getText();
        filter(query);
    }//GEN-LAST:event_txtFilterKeyReleased

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            int index = tblUserProfile.convertRowIndexToModel​(tblUserProfile.getSelectedRow());
      
            int input = JOptionPane.showConfirmDialog((Component) this, "Kliknite OK ukoliko ste sigurni\nda zelite da obrisete korisnika", "Paznja!", JOptionPane.DEFAULT_OPTION);

                if (input == 0) {
                    UserProfileTableModel model = (UserProfileTableModel) tblUserProfile.getModel();
                    UserProfile selectedUserProfile = model.getUserProfile(index);
                    userProfileService.delete(selectedUserProfile);

                    prepareView();
                }
            
            } catch (IndexOutOfBoundsException e) {
                JOptionPane.showMessageDialog(this, "Niste odabrali korisnika");
            } catch (UserMessageException e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Greska!", JOptionPane.ERROR_MESSAGE);
            } catch (Exception e) {
                e.printStackTrace();
            }
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnDelete;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlFilter;
    private javax.swing.JTable tblUserProfile;
    private javax.swing.JTextField txtFilter;
    // End of variables declaration//GEN-END:variables

    private void prepareView() {
        try {
            tblUserProfile.setModel(new UserProfileTableModel(userProfileService.getAll()));

            tblUserProfile.setAutoCreateRowSorter(true);

            tblUserProfile.getColumnModel().getColumn(0).setPreferredWidth(70);
            tblUserProfile.getColumnModel().getColumn(1).setPreferredWidth(70);
            tblUserProfile.getColumnModel().getColumn(2).setPreferredWidth(170);
            tblUserProfile.getColumnModel().getColumn(3).setPreferredWidth(170);
            tblUserProfile.getColumnModel().getColumn(4).setPreferredWidth(200);

            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(JLabel.CENTER);
            tblUserProfile.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);

        } catch (Exception ex) {
            Logger.getLogger(UserProfileSearchForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void filter(String query) {
        UserProfileTableModel model = (UserProfileTableModel) tblUserProfile.getModel();
        TableRowSorter<UserProfileTableModel> tr = new TableRowSorter<>(model);
        tblUserProfile.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter("(?i)" + query));
    }
}
