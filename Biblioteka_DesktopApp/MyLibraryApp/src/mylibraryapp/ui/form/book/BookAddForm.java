/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package mylibraryapp.ui.form.book;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import mylibraryapp.domain.Author;
import mylibraryapp.domain.Book;
import mylibraryapp.exception.UserMessageException;
import mylibraryapp.service.BookService;
import mylibraryapp.service.impl.BookServiceImpl;
import mylibraryapp.ui.form.author.AuthorSelectForm;

/**
 *
 * @author Branislav Vujanov
 */
public class BookAddForm extends javax.swing.JDialog {

private List<Author> selectedAuthors = new ArrayList<>();
private BookService bookService;
    /**
     * Creates new form BookAddForm
     */
    public BookAddForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(this);
        bookService = new BookServiceImpl();
        listAuthor.setModel(new DefaultListModel());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBook = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jhu = new javax.swing.JLabel();
        sdfsd = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTitle = new javax.swing.JTextField();
        txtPrintingYear = new javax.swing.JTextField();
        txtQantity = new javax.swing.JTextField();
        btnAuthorSelect = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listAuthor = new javax.swing.JList();
        btnDeleteAuthor = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlBook.setBorder(javax.swing.BorderFactory.createTitledBorder("Dodaj knjigu"));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Naslov:");

        jhu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jhu.setText("Godina izdanja:");

        sdfsd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        sdfsd.setText("Broj primeraka:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Autor(i):");

        btnAuthorSelect.setText("Izaberi iz tabele");
        btnAuthorSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAuthorSelectActionPerformed(evt);
            }
        });

        btnSave.setText("Sacuvaj");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        listAuthor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jScrollPane2.setViewportView(listAuthor);

        btnDeleteAuthor.setText("Izbrisi autora");
        btnDeleteAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAuthorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBookLayout = new javax.swing.GroupLayout(pnlBook);
        pnlBook.setLayout(pnlBookLayout);
        pnlBookLayout.setHorizontalGroup(
            pnlBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBookLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(sdfsd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jhu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTitle)
                    .addComponent(txtPrintingYear)
                    .addComponent(txtQantity)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAuthorSelect)
                    .addComponent(btnDeleteAuthor))
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBookLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addGap(238, 238, 238))
        );
        pnlBookLayout.setVerticalGroup(
            pnlBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBookLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(pnlBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(pnlBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrintingYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jhu, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(pnlBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtQantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sdfsd, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(pnlBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBookLayout.createSequentialGroup()
                        .addGroup(pnlBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAuthorSelect))
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteAuthor))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(pnlBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAuthorSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAuthorSelectActionPerformed
        AuthorSelectForm authorSelectForm = new AuthorSelectForm(null, true);
        authorSelectForm.setVisible(true);
        //nakon zatvaranja forme
        Author author = authorSelectForm.getSelectedAuthor(); 
        
        DefaultListModel model = new DefaultListModel();
        if (author != null) {  
            if (selectedAuthors.contains(author)) {
                JOptionPane.showMessageDialog(this, "Izabrali ste dvaput istog autora!");
                for (Author selectedAuthor : selectedAuthors) {
                     model.addElement(selectedAuthor);
                } 
                listAuthor.setModel(model);
            }else {
                selectedAuthors.add(author);
                for (Author selectedAuthor : selectedAuthors) {
                     model.addElement(selectedAuthor);
                } 
            }
        }
        listAuthor.setModel(model);
    }//GEN-LAST:event_btnAuthorSelectActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String error = "";
        try {
            String title = txtTitle.getText().trim();
            if (title.isEmpty()) throw new UserMessageException("Niste uneli naslov knjige");
            
            error = " za godinu izdanja";
            int printingYear = Integer.parseInt(txtPrintingYear.getText().trim());            
            int currentYear = LocalDate.now().getYear();
            if (printingYear <1440 || printingYear > currentYear) throw new UserMessageException("Pogresan unos godine!\nGodina mora biti izmedju 1440 i trenutne godine");
            
            error = " primeraka";
            int quantity = Integer.parseInt(txtQantity.getText().trim());
            if (quantity < 0) throw new UserMessageException("Pogresan unos!\nBroj primeraka mora biti veci od 0");
            
            DefaultListModel model = (DefaultListModel)listAuthor.getModel();
            if (model.getSize() == 0) throw new UserMessageException("Niste uneli autora");
            
            Book book = new Book(title, printingYear, quantity, selectedAuthors);
            bookService.add(book);
            JOptionPane.showMessageDialog(this, "Uspesno ste sacuvali knjigu");
            
            txtTitle.setText("");
            txtPrintingYear.setText("");
            txtQantity.setText("");
            selectedAuthors.clear();
            model.removeAllElements();
            
            
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(this, "Niste uneli broj" + error, "Greska!", JOptionPane.ERROR_MESSAGE);  
        } catch (UserMessageException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Greska!", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAuthorActionPerformed

            DefaultListModel model = (DefaultListModel) listAuthor.getModel();
            int index = listAuthor.getSelectedIndex();
            if (index != -1) {
                Author author = (Author) model.get(index);
                model.removeElementAt(index);
                selectedAuthors.remove(author);
            } else {
                JOptionPane.showMessageDialog(this, "Niste izabrali autora!");
            }
        

    }//GEN-LAST:event_btnDeleteAuthorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAuthorSelect;
    private javax.swing.JButton btnDeleteAuthor;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jhu;
    private javax.swing.JList listAuthor;
    private javax.swing.JPanel pnlBook;
    private javax.swing.JLabel sdfsd;
    private javax.swing.JTextField txtPrintingYear;
    private javax.swing.JTextField txtQantity;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
